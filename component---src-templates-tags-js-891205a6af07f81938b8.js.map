{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/container.js","webpack:///./src/utils/node-link.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","_components_container__WEBPACK_IMPORTED_MODULE_3__","_utils_node_link__WEBPACK_IMPORTED_MODULE_4__","Tags","_ref","pageContext","data","tag","location","_data$allStoryWriterM","allStoryWriterMarkdown","edges","totalCount","tagHeader","a","createElement","map","_ref2","node","title","slug","getLink","key","to","propTypes","PropTypes","shape","string","isRequired","number","arrayOf","Container","_Object$assign","children","_ref$className","className","_ref$hasSideBar","hasSideBar","_ref$overrideCSS","overrideCSS","react__WEBPACK_IMPORTED_MODULE_2___default","Object","emotion__WEBPACK_IMPORTED_MODULE_1__","assign","maxWidth","rhythm","presets","maxWidthWithSidebar","margin","padding","options","blockMarginBottom","paddingBottom","position","Tablet","link","docType"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,IAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KASMa,EAAO,SAAAC,GAAqC,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KACnBC,GADwCH,EAAfI,SACjBH,EAARE,KADwCE,EAElBH,EAAKI,uBAA3BC,EAFwCF,EAExCE,MAAOC,EAFiCH,EAEjCG,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAA,QADa,iBAEEL,EAFF,IAIf,OACEX,EAAAkB,EAAAC,cAACd,EAAA,EAAD,KACEL,EAAAkB,EAAAC,cAAA,UAAKF,GACLjB,EAAAkB,EAAAC,cAAA,UACGJ,EAAMK,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNC,EAAQD,EAAKC,MACbC,EAAOC,YAAQH,GACrB,OACEtB,EAAAkB,EAAAC,cAAA,MAAIO,IAAKF,GACPxB,EAAAkB,EAAAC,cAACf,EAAA,KAAD,CAAMuB,GAAIH,GAAOD,OAKzBvB,EAAAkB,EAAAC,cAACf,EAAA,KAAD,CAAMuB,GAAG,SAAT,cAKNpB,EAAKqB,UAAY,CACfnB,YAAaoB,IAAUC,MAAM,CAC3BnB,IAAKkB,IAAUE,OAAOC,aAExBtB,KAAMmB,IAAUC,MAAM,CACpBhB,uBAAwBe,IAAUC,MAAM,CACtCd,WAAYa,IAAUI,OAAOD,WAC7BjB,MAAOc,IAAUK,QACfL,IAAUC,MAAM,CACdR,KAAMO,IAAUC,MAAM,CACpBP,MAAOM,IAAUE,OAAOC,WACxBR,KAAMK,IAAUE,OAAOC,eAExBA,iBAMIzB,YAER,IAAMT,EAAS,sGCzBPqC,IA1BG,SAAA3B,GAAA,IAAA4B,EAChBC,EADgB7B,EAChB6B,SADgBC,EAAA9B,EAEhB+B,iBAFgB,IAAAD,EAAA,GAAAA,EAAAE,EAAAhC,EAGhBiC,kBAHgB,IAAAD,KAAAE,EAAAlC,EAIhBmC,mBAJgB,IAAAD,EAIF,GAJEA,EAAA,OAMhBE,EAAA1B,EAAAC,cAAA,OAAAoB,UAAAM,OAAAC,EAAA,MAAAD,QAAAC,EAAA,IAAAD,QAAAE,QAAAX,EAAA,CAEIY,SAAUP,EACNQ,YAAOC,IAAQC,qBACfF,YAAOC,IAAQF,UACnBI,OAAM,SACNC,QAAYJ,YAAO,KAAZ,IAAoBA,YAAOK,IAAQC,mBAC1CC,cAAeP,YAAO,KACtBQ,SAAQ,YARZrB,EASKc,IAAQQ,QAAS,CAChBF,cAAeP,YAAO,MAV5Bb,GAYOO,IAZP,IAcaJ,IAEVF,sCClBUZ,IATC,SAACH,GACf,IAAIqC,EAAO,SAAWrC,EAAKE,KAM3B,MALqB,SAAjBF,EAAKsC,QACND,EAAO,SAAWrC,EAAKE,KACE,SAAjBF,EAAKsC,UACbD,EAAO,SAAWrC,EAAKE,MAEnBmC","file":"component---src-templates-tags-js-891205a6af07f81938b8.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Container from \"../components/container\"\nimport getLink from \"../utils/node-link\"\n\n\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allStoryWriterMarkdown\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? `` : `s`\n  } tagged with \"${tag}\"`\n\n  return (\n    <Container>\n      <h1>{tagHeader}</h1>\n      <ul>\n        {edges.map(({ node }) => {\n          const title = node.title\n          const slug = getLink(node)\n          return (\n            <li key={slug}>\n              <Link to={slug}>{title}</Link>\n            </li>\n          )\n        })}\n      </ul>\n      <Link to=\"/tags\">All tags</Link>\n    </Container>\n  )\n}\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allStoryWriterMarkdown: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            slug: PropTypes.string.isRequired,\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allStoryWriterMarkdown(\n      sort: { fields: [updateDate], order: DESC }\n      filter: { tags: { in: [$tag] } }\n    ) {\n      totalCount\n      edges {\n        node {\n          title\n          docType\n          slug\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport presets from \"../utils/presets\"\n\nimport { rhythm, options } from \"../utils/typography\"\n\nconst Container = ({\n  children,\n  className = ``,\n  hasSideBar = true,\n  overrideCSS = {},\n}) => (\n  <div\n    css={{\n      maxWidth: hasSideBar\n        ? rhythm(presets.maxWidthWithSidebar)\n        : rhythm(presets.maxWidth),\n      margin: `0 auto`,\n      padding: `${rhythm(1.5)} ${rhythm(options.blockMarginBottom)}`,\n      paddingBottom: rhythm(3.5),\n      position: `relative`,\n      [presets.Tablet]: {\n        paddingBottom: rhythm(1.5),\n      },\n      ...overrideCSS,\n    }}\n    className={className}\n  >\n    {children}\n  </div>\n)\n\nexport default Container\n","const getLink = (node)=>{\n  let link = `/blog/` + node.slug\n  if (node.docType === 'docs') {\n     link = `/docs/` + node.slug\n  } else if (node.docType === 'logs') {\n     link = `/logs/` + node.slug\n  }\n  return link\n}\nexport default getLink\n"],"sourceRoot":""}