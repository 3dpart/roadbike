{"version":3,"sources":["webpack:///./src/components/tags-section.js","webpack:///./src/templates/template-blog-post.js","webpack:///./src/components/container.js","webpack:///./src/utils/node-link.js","webpack:///./src/components/left-sidebar-buttons.js"],"names":["_","require","TagsSection","_ref","tags","tagLinks","map","tag","i","divider","length","react_default","a","createElement","key","gatsby_browser_entry","to","kebabCase","toLowerCase","style","Object","assign","scale","display","marginBottom","rhythm","paddingBottom","BlogPostTemplate","render","_css4","_css7","_css9","_css11","_css13","_css17","_css19","_css23","props","this","post","data","storyWriterMarkdown","prev","pageContext","next","prevNextLinkStyles","&&","boxShadow","borderBottom","fontFamily","options","headerFontFamily","join","fontWeight","color","colors","gatsby","prevNextLabelStyles","marginTop","gray","calm","lineHeight","postHtmlAndCss","customCss","html","container","className","index_esm","_ref2","left_sidebar_buttons","zipFile","pdfFile","id","Helmet_default","title","name","content","excerpt","property","createDate","presets","Tablet","flex","marginLeft","_Object$assign","children","typography","margin","Mobile","updateDate","Desktop","dangerouslySetInnerHTML","__html","tags_section","borderTop","ui","light","paddingTop","Phablet","width","getLink","md","verticalAlign","textAlign","marginRight","React","Component","pageQuery","Container","_ref$className","_ref$hasSideBar","hasSideBar","_ref$overrideCSS","overrideCSS","react__WEBPACK_IMPORTED_MODULE_2___default","emotion__WEBPACK_IMPORTED_MODULE_1__","maxWidth","maxWidthWithSidebar","padding","blockMarginBottom","position","node","link","slug","docType","ContainerStyled","styled","target","border","LeftSidebarButtons","zipURL","pdfURL","window","encodeURIComponent","location","origin","publicURL","react__WEBPACK_IMPORTED_MODULE_1___default","href","gatsby__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"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","file":"component---src-templates-template-blog-post-js-4b45deee8933ddb1419c.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { rhythm, scale } from \"../utils/typography\"\nconst _ = require(`lodash`)\n\nconst TagsSection = ({ tags }) => {\n  if (!tags) return null\n  const tagLinks = tags.map((tag, i) => {\n    const divider = i < tags.length - 1 && <span>{` | `}</span>\n    return (\n      <span key={tag}>\n        <Link to={`/tags/${_.kebabCase(tag.toLowerCase())}`}>{tag}</Link>\n        {divider}\n      </span>\n    )\n  })\n  return (\n    <em\n      style={{\n        ...scale(-1 / 5),\n        display: `block`,\n        marginBottom: rhythm(1),\n      }}\n    >\n      Tagged with {tagLinks}\n    </em>\n  )\n}\n\nexport default TagsSection\n","import React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { Link, graphql } from \"gatsby\"\nimport {MdArrowForward, MdArrowBack} from \"react-icons/md\"\nimport Img from \"gatsby-image\"\nimport presets, { colors } from \"../utils/presets\"\nimport typography, { rhythm, scale, options } from \"../utils/typography\"\nimport Container from \"../components/container\"\nimport TagsSection from \"../components/tags-section\"\nimport getLink from \"../utils/node-link\"\nimport LeftSidebarButtons from \"../components/left-sidebar-buttons\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const props = this.props\n    const post = this.props.data.storyWriterMarkdown;\n    const prev = this.props.pageContext.prev\n    const next = this.props.pageContext.next\n    const prevNextLinkStyles = {\n      \"&&\": {\n        boxShadow: `none`,\n        borderBottom: 0,\n        fontFamily: options.headerFontFamily.join(`,`),\n        fontWeight: `bold`,\n        color: colors.gatsby,\n      },\n    }\n    const prevNextLabelStyles = {\n      marginTop: 0,\n      marginBottom: 0,\n      color: colors.gray.calm,\n      fontWeight: `normal`,\n      ...scale(0),\n      lineHeight: 1,\n    }\n    const BioLine = ({ children }) => (\n      <p\n        css={{\n          ...scale(-2 / 5),\n          fontFamily: typography.options.headerFontFamily.join(`,`),\n          lineHeight: 1.3,\n          margin: 0,\n          color: colors.gray.calm,\n          [presets.Mobile]: {\n            ...scale(-1 / 5),\n            lineHeight: 1.3,\n          },\n        }}\n      >\n        {children}\n      </p>\n    )\n\n    const postHtmlAndCss = `<style>${post.customCss}</style>\\n${post.html}`\n\n    return (\n      <div>\n        <Container className=\"post\" css={{ paddingBottom: `0` }}>\n          <LeftSidebarButtons \n            zipFile={props.data.zipFile}\n            pdfFile={props.data.pdfFile}\n          />\n          <main id={`reach-skip-nav`}>\n            {/* Add long list of social meta tags */}\n            <Helmet>\n              <title>{post.title}</title>\n              <meta\n                name=\"description\"\n                content={\n                  post.excerpt\n                }\n              />\n\n              <meta property=\"og:description\" content={post.excerpt} />\n              <meta property=\"og:title\" content={post.title} />\n              <meta property=\"og:type\" content=\"article\" />\n              <meta\n                name=\"article:published_time\"\n                content={post.createDate}\n              />\n            </Helmet>\n            <section\n              css={{\n                display: `flex`,\n                marginTop: rhythm(-1 / 4),\n                marginBottom: rhythm(1),\n                [presets.Tablet]: {\n                  marginTop: rhythm(1 / 2),\n                  marginBottom: rhythm(2),\n                },\n              }}\n            >\n              <div\n                css={{\n                  flex: `1 1 auto`,\n                  marginLeft: rhythm(1 / 2),\n                }}\n              >\n                <BioLine>\n                  {post.updateDate}\n                </BioLine>\n              </div>\n            </section>\n            <h1\n              css={{\n                marginTop: 0,\n                [presets.Desktop]: {\n                  marginBottom: rhythm(5 / 4),\n                },\n              }}\n            >\n              {post.title}\n            </h1>\n            <section className=\"post-body\">\n              <div dangerouslySetInnerHTML={{ __html: postHtmlAndCss }} />\n            </section>\n            <TagsSection\n              tags={post.tags}\n            />\n          </main>\n        </Container>\n        <div\n          css={{\n            borderTop: `1px solid ${colors.ui.light}`,\n            marginTop: rhythm(2),\n            [presets.Tablet]: {\n              marginTop: rhythm(2),\n              paddingBottom: rhythm(1),\n              paddingTop: rhythm(1),\n            },\n            [presets.Desktop]: {\n              marginTop: rhythm(3),\n              paddingBottom: rhythm(2),\n              paddingTop: rhythm(2),\n            },\n          }}\n        >\n          <Container>\n            <div\n              css={{ [presets.Phablet]: { display: `flex`, width: `100%` } }}\n            >\n              <div\n                css={{\n                  [presets.Phablet]: {\n                    width: `50%`,\n                  },\n                }}\n              >\n                {prev && (\n                  <Link to={getLink(prev)} css={prevNextLinkStyles}>\n                    <h4 css={prevNextLabelStyles}>Previous</h4>\n                    <span\n                      css={{\n                        [presets.Tablet]: {\n                          marginLeft: `-1rem`,\n                        },\n                      }}\n                    >\n                      <MdArrowBack style={{ verticalAlign: `sub` }} />\n                      {prev.title}\n                    </span>\n                  </Link>\n                )}\n              </div>\n              <div\n                css={{\n                  textAlign: `right`,\n                  marginTop: rhythm(1),\n                  [presets.Phablet]: { marginTop: 0, width: `50%` },\n                }}\n              >\n                {next && (\n                  <Link to={getLink(next)} css={prevNextLinkStyles}>\n                    <h4 css={prevNextLabelStyles}>Next</h4>\n                    <span\n                      css={{\n                        [presets.Tablet]: {\n                          marginRight: `-1rem`,\n                        },\n                      }}\n                    >\n                      {next.title}\n                      <MdArrowForward style={{ verticalAlign: `sub` }} />\n                    </span>\n                  </Link>\n                )}\n              </div>\n            </div>\n          </Container>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!, $zipPath: String!, $pdfPath: String!) {\n    zipFile: file(absolutePath: {eq: $zipPath}){\n      publicURL\n    }\n    pdfFile: file(absolutePath: {eq: $pdfPath}){\n      publicURL\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    storyWriterMarkdown(slug: { eq: $slug }) {\n      id\n      html\n      excerpt\n      docType\n      title\n      customCss\n      css\n      createDate(formatString: \"MMMM DD, YYYY\")\n      updateDate(formatString: \"MMMM DD, YYYY\")\n      tags\n      cover {\n        childImageSharp {\n          fluid(maxWidth: 1000) {\n            ...GatsbyImageSharpFluid_tracedSVG\n            originalImg\n          }\n        }\n      }\n      meta {\n        title\n        tags\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport presets from \"../utils/presets\"\n\nimport { rhythm, options } from \"../utils/typography\"\n\nconst Container = ({\n  children,\n  className = ``,\n  hasSideBar = true,\n  overrideCSS = {},\n}) => (\n  <div\n    css={{\n      maxWidth: hasSideBar\n        ? rhythm(presets.maxWidthWithSidebar)\n        : rhythm(presets.maxWidth),\n      margin: `0 auto`,\n      padding: `${rhythm(1.5)} ${rhythm(options.blockMarginBottom)}`,\n      paddingBottom: rhythm(3.5),\n      position: `relative`,\n      [presets.Tablet]: {\n        paddingBottom: rhythm(1.5),\n      },\n      ...overrideCSS,\n    }}\n    className={className}\n  >\n    {children}\n  </div>\n)\n\nexport default Container\n","const getLink = (node)=>{\n  let link = `/blog/` + node.slug\n  if (node.docType === 'docs') {\n     link = `/docs/` + node.slug\n  } else if (node.docType === 'logs') {\n     link = `/logs/` + node.slug\n  }\n  return link\n}\nexport default getLink\n","import React from \"react\"\nimport styled from \"react-emotion\"\nimport { Link } from \"gatsby\"\n\nimport presets, { colors } from \"../utils/presets\"\nimport { rhythm, options } from \"../utils/typography\"\n\nconst ContainerStyled = styled('div')`\n  position: fixed;\n  right: 20px;\n  display: none;\n  text-align: right;\n  flex-direction: column;\n  color: ${colors.ui.border};\n  ${presets.Tablet}{\n    display: flex;\n  }\n  ${presets.Desktop}{\n    display: flex;\n  }\n  & .fas{\n    vertical-align: middle;\n  }\n  & .icon_tip{\n    font-size: .7em;\n    opacity: 0;\n    transition: transform 0.5s cubic-bezier(0.18, 0.89, 0.32, 1.28), opacity 0.5s ease-out, color 0.1s linear;\n    transform: translateX(-1em);\n    visibility: hidden;\n    background-color: inherit;\n    white-space: nowrap;\n    border-bottom: 1px dashed;\n    display: inline-block;\n    margin-right: 10px;\n  }\n  &:hover .icon_tip{\n    opacity: 1;\n    transform: none;\n    visibility: visible;\n  }\n`\n\nclass LeftSidebarButtons extends React.Component {\n  render() {\n    const props = this.props\n    let zipURL = ''\n    let pdfURL = ''\n    if (props.zipFile){\n      //zipURL = `http://localhost:3000/#xsjzip=${encodeURIComponent(window.location.origin + props.zipFile.publicURL)}`\n      if (typeof window !== 'undefined') {\n        zipURL = `http://markdown.xiaoshujiang.com/#xsjzip=${encodeURIComponent(window.location.origin + props.zipFile.publicURL)}`\n      }\n    }\n    if (props.pdfFile){\n      pdfURL = `/pdf/#file=${encodeURIComponent(props.pdfFile.publicURL)}`\n    }\n    if (zipURL || pdfURL){\n      return (\n      <ContainerStyled>\n        {zipURL&&<a href={zipURL}><span className=\"icon_tip\">修改当前文件</span><i className=\"fas fa-file-archive\"></i></a>}\n        {pdfURL&&<Link to={pdfURL}><span className=\"icon_tip\">查看pdf版本</span><i className=\"fas fa-file-pdf\"></i></Link>}\n      </ContainerStyled>\n        )\n    } else {\n      return \"\"\n    }\n  }\n}\n\nexport default LeftSidebarButtons\n\n"],"sourceRoot":""}